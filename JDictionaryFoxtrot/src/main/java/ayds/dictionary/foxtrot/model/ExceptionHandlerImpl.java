package ayds.dictionary.foxtrot.model;import ayds.dictionary.foxtrot.model.externalServices.Source;import java.io.IOException;import java.util.Map;class ExceptionHandlerImpl implements ExceptionHandler {    private ExceptionListener exceptionListener;    public void setExceptionListener (ExceptionListener exceptionListener){        this.exceptionListener= exceptionListener;    }    @Override    public  void notifyException(Exception exception){        String message = exception.getMessage();        exceptionListener.notifyMessage(message);    }    @Override    public void notifyServiceExceptions(Map<Source, Exception> exceptionMap) {        if (!exceptionMap.isEmpty()) {            exceptionListener.notifyMessage(buildServiceExceptionsMessage(exceptionMap));        }    }    private String buildServiceExceptionsMessage(Map<Source, Exception> exceptionMap) {        StringBuilder stringBuilder = new StringBuilder("Hubo un fallo en: \n");        for (Source source : exceptionMap.keySet()) {            if (exceptionMap.get(source) instanceof IOException)                stringBuilder.append(source.name() + " - error de conexi√≥n al servicio \n");            else                stringBuilder.append(source.name() + " - error inesperado en el servicio \n");        }        return stringBuilder.toString();    }}