package ayds.dictionary.foxtrot.model;import ayds.dictionary.foxtrot.excepciones.TraductorException;import ayds.dictionary.foxtrot.model.databases.DataBase;import ayds.dictionary.foxtrot.model.parsers.ParserFromXML;import ayds.dictionary.foxtrot.model.services.Service;import ayds.dictionary.foxtrot.view.ParserToHTML;class RepositoryImpl implements Repository{    private final String dataBaseSymbol = "[*]";    private DataBase dataBase;    private Service service;    RepositoryImpl(DataBase dataBase, Service service) {        this.dataBase = dataBase;        this.service = service;    }    public String getMeaning(String term) throws TraductorException{        String meaning = null;        if (estaResultadoCacheado(term)) {            meaning = getResultadoCacheado(term);        }        else{            meaning = service.getMeaning(term);            meaning = ParserFromXML.getInstance().format(meaning);            guardarResultado(term,meaning);        }        return meaning;    }    private String getResultadoCacheado(String term) {        return dataBaseSymbol + dataBase.getMeaning(term);    }    private void guardarResultado(String term, String meaning) {        dataBase.saveTerm(term, meaning);    }    private boolean estaResultadoCacheado(String term) {        String meaning = dataBase.getMeaning(term);        return meaning!=null;    }}